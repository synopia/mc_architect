h1. Minecraft Architect

Minecraft Architect helps you building complex structures in "minecraft":http://www.minecraft.net.
As everyone familiar to the game knows, building interesting constructions like spheres, ellipses or arcs is a very
challenging task.

This tool will simplify the process by taking away the annoying counting blocks action. Instead, you will see your actual
construction sliced by levels and your current position in a running minecraft client.

h1. Download and Installation

 * Release 1.0: "mc_architect-0.3.11.jar, latest, 0.3.11":http://download.funky-clan.de/mc_architect-0.3.11.jar (~ 4.2mb)
 * "Dependency file for mc_architect.jar":http://download.funky-clan.de/jruby-complete-1.5.2.jar (~ 11mb)

 To start Minecraft Architect, copy mc_architect.jar and the jruby.jar into any directory:
<pre><code>
  > java -jar mc_architect.jar
</code></pre>

 In the upper textbox type the name of the multiplayer server.

 Then start Minecraft and connect to a multiplayer game using <pre>localhost:12345</pre>.

h1. Scripting

<pre><code>
    # you have access to the following objects:
    #
    #  * @model
    #       full access to the world model (be careful...)
    #  * @world
    #       a "graphics" object, with some neat stuff like set_origin or ellipse
    #  * @slice_x, @slice_y, @slice_z
    #       works the same like @world, but with switched coordinate systems
    #       when you set a pixel using @slice_y.set_pixel(x,y,z,1), it will be placed at x,z,y in world coordinates
    #       y in world coordinate means up
    #  * @binvox
    #       experimental binvox loader
    #
    java_import "de.funky_clan.mc.config.DataValues"

    @mid_x = 1217
    @mid_y = 64
    @mid_z = -50

    # this method gets called to gather some info about this script
    def info
      {
        :name   => "Glaskugel",
        :author => "synopia",
        :mid    => [@mid_x, @mid_y, @mid_z]
      }
    end

    # this is called when "running" the script
    def run
      @world.set_origin @mid_x, @mid_y, @mid_z
      sphere @world, 63, DataValues::GLASS.id
    end

    # a simple sphere
    def sphere g, r, type
      (-r..+r).each do |x|
        (-r..+r).each do |y|
          (-r..+r).each do |z|
            dist = Math.sqrt( x**2 + y**2 + z**2 )
            if (r-dist).abs<0.5
              g.set_pixel x,y,z, type
            end
          end
        end
      end
    end
</code></pre>

h1. Development environment

<pre><code>
  mc_architect> mvn install
</code></pre>

h1. History

h4. 0.3.11
* Fixed bow

h4. 0.3.10
* Updated to Release 1.0

h4. 0.3.8
* Schematic loader

h4. 0.3.7
* included spider
* disabled ingame blueprint

h4. 0.3.6
* Updated to 1.6.4

h4. 0.3.5
* new script: station select schematic and nagoya

h4. 0.3.4
* fixed bug with selection box
* fixed bug with image icons
* fixed crash when starting without jruby dependency
* updated network protocol to mc 1.4
* autohiding block currently aiming to (experimental!)

h4. 0.3.3
* rounding bug fixed
* several code quality fixups

h4. 0.3.2
* improved script running
* improved script api

h4. 0.3.1
* HUGE performance improvment using backbuffers
* fixed color picker

h4. 0.3
* new eventbus (every network packet goes through eventbus)
* you can see your blueprint INGAME
* new "docking framework":http://dock.javaforge.com/
* lot of gui tweaks

h4. 0.2.4
* included new project 'glaskugel' ;-)
* fixed rounding bug

h4. 0.2.3
* loading of binvox files
* nuclear plant included

h4. 0.2.2
* ore filter

h4. 0.2.1
* player is 1x2x1 blocks

h4. 0.2

* numerous fixes and features ;-)